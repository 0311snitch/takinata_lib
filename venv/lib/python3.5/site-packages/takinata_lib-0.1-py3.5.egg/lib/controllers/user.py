import lib.logger as logger
from lib.models.models import User
from lib.storage.user import UserStorage
from lib.exception import UserAlreadyExist, NoUser


class UserController:
    log_tag = "UserController"

    @classmethod
    def reg(cls, username, password, email):
        """
        User registration with the specified data
        :param username: desired user name
        :param password: desired password
        :param email: desired e-mail
        :return:
        """
        user = User(username=username, password=password, email=email)
        users = UserStorage.get_all_users()
        have = False
        for i in users:
            if i.username == user.username:
                have = True
        if not have:
            UserStorage.add_user_to_db(user)
            return user
        else:
            raise UserAlreadyExist

    @classmethod
    def delete(cls, username):
        user = UserStorage.get_user_by_name(username)
        if user != None:
            UserStorage.delete_user_from_db(user)
        else:
            raise NoUser

    @classmethod
    def get_user_by_name(cls, name):
        user = UserStorage.get_user_by_name(name)
        return user

    @classmethod
    def get_user_by_id(cls, id):
        user = UserStorage.get_user_by_id(id)
        return user

    @classmethod
    def get_all_users(cls):
        return UserStorage.get_all_users()
