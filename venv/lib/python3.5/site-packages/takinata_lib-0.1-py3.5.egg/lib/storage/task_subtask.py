import sqlite3
import lib.conf as conf
from lib.exception import *
from lib.models.user import Task, Project, Column, TaskSubtask
from lib.storage.column import *
from sqlalchemy import create_engine, update
from sqlalchemy.orm import sessionmaker
engine = create_engine(conf.get_path_to_db())
from sqlalchemy.ext.declarative import declarative_base

class TaskSubtaskStorage:
    Session = sessionmaker(bind=engine)
    session = Session()

    @classmethod
    def get_all_subtasks(cls, task):
        tasks = TaskStorage.session.query(TaskSubtask).filter(TaskSubtask.task_id == task.id)
        TaskStorage.session.close()
        return tasks

    @classmethod
    def add_subtask(cls, task1, task2):
        subtask = TaskSubtask(subtask_id=task1.id, task_id=task2.id)
        TaskSubtaskStorage.session.add(subtask)
        TaskSubtaskStorage.session.commit()
        TaskSubtaskStorage.session.close()